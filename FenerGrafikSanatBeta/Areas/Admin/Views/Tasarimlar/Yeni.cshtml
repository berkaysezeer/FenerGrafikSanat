@model FenerGrafikSanatBeta.Models.Tasarim
@{
    ViewBag.Title = "Yeni Tasarım";
}

@using (Html.BeginForm("Yeni", "Tasarimlar", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

  

    <div class="card card-primary">
        <div class="card-header">
            <h3 class="card-title">Yeni Tasarım</h3>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.TasarimAdi)
                        @Html.TextBoxFor(x => x.TasarimAdi, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.TasarimAdi, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(x => x.Slug)

                        <div class="input-group">
                            @Html.TextBoxFor(x => x.Slug, new { @class = "form-control", placeholder = "ornek-url-adresi" })
                            <div class="input-group-append">
                                <a id="refreshSlug" href="#" class="btn btn-outline-secondary">
                                    <i class="fas fa-sync-alt"></i>
                                </a>
                            </div>
                        </div>

                        @Html.ValidationMessageFor(x => x.Slug, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.TasarimciAdSoyad)
                @Html.TextBoxFor(x => x.TasarimciAdSoyad, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.TasarimciAdSoyad, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.KategoriId)
                @Html.DropDownListFor(x => x.KategoriId, null, "Seçiniz", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.KategoriId, null, new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(x => x.Resim)

                <div id="onizlemeResim" class="d-none">
                    <img src="" alt="Yüklenecek Resim Önizleme" height="75" />
                </div>

                <div class="input-group mt-3">
                    <div class="custom-file">
                        @Html.TextBoxFor(x => x.Resim, new { type = "file", @class = "form-control-file custom-file-input mt-3", accept = "image/png, image/jpeg" })
                        <label class="custom-file-label" for="Resim">Tasarım Seç</label>
                    </div>
                    @Html.ValidationMessageFor(x => x.Resim, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="card-footer">
            <div class="float-left">
                <a href="@Url.Action("Index","Tasarimlar")" class="btn btn-secondary">İptal</a>
                <button type="submit" class="btn btn-primary">Ekle</button>
            </div>
        </div>

    </div>





}



@section scripts {
    <script>
        $("#Resim").change(function (event) {
            // eğer dosya seçildiyse
            if (this.files && this.files[0]) {
                var reader = new FileReader();

                // dosya okuma işlemi bittiğinde
                reader.onload = function (e) {
                    $("#onizlemeResim img").attr("src", e.target.result);
                    $("#onizlemeResim").removeClass("d-none");
                };

                // dosyayı oku
                reader.readAsDataURL(this.files[0]);
            } else {
                $("#onizlemeResim").addClass("d-none");
            }
        });

        slug.run("#TasarimAdi", "#Slug", "#refreshSlug");
    </script>
}
